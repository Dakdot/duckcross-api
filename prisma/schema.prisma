generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(cuid())
  email                 String    @unique
  password              String
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  refreshToken          String?
  role                  String    @default("user")
  refreshTokenCreatedAt DateTime?
  profile               Profile?
}

model Profile {
  id        String   @id @default(cuid())
  name      String?
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Agency {
  id        String   @id
  name      String
  phone     String?
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   String?
  lang      String
  timezone  String
  url       String
  routes    Route[]
}

model Route {
  id          String @id
  short_name  String
  long_name   String
  type        Int
  description String
  url         String
  color       String
  text_color  String
  agency_id   String
  agency      Agency @relation(fields: [agency_id], references: [id])
  trips       Trip[]
}

model Trip {
  id           String     @id
  headsign     String
  direction_id Int?
  route_id     String
  stop_times   StopTime[]
  route        Route      @relation(fields: [route_id], references: [id])
}

model Stop {
  id             String     @id
  name           String
  lat            Float
  lon            Float
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  location_type  Int?
  parent_stop_id String?
  parent_stop    Stop?      @relation("ParentChildStops", fields: [parent_stop_id], references: [id])
  child_stops    Stop[]     @relation("ParentChildStops")
  stop_times     StopTime[]
}

model StopTime {
  id             String @id @default(cuid())
  arrival_time   String
  departure_time String
  stop_id        String
  stop_sequence  Int
  trip_id        String
  stop           Stop   @relation(fields: [stop_id], references: [id])
  trip           Trip   @relation(fields: [trip_id], references: [id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}
